import csv

def check_gpu_database_210():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–∏—Å–∏ GeForce 210 –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö GPU"""
    
    try:
        with open('gpu-database.csv', 'r', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile)
            geforce210_db = [row for row in reader if '210' in row.get('name', '')]
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª gpu-database.csv –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ CSV —Ñ–∞–π–ª–∞: {e}")
        return
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(geforce210_db)} –∑–∞–ø–∏—Å–µ–π GeForce 210 –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    print("=" * 80)
    
    for i, gpu in enumerate(geforce210_db):
        print(f"\n{i+1}. {gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   manufacturer: {gpu.get('manufacturer', '–ù–µ—Ç')}")
        print(f"   architecture: {gpu.get('architecture', '–ù–µ—Ç')}")
        print(f"   generation: {gpu.get('generation', '–ù–µ—Ç')}")
        print(f"   memory_size: {gpu.get('memory_size', '–ù–µ—Ç')}")
        print(f"   memory_type: {gpu.get('memory_type', '–ù–µ—Ç')}")
        print(f"   shading_units: {gpu.get('shading_units', '–ù–µ—Ç')}")
    
    # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º RTX 4090 D
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º RTX 4090 D –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    print("=" * 80)
    
    try:
        with open('gpu-database.csv', 'r', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile)
            rtx4090d_db = [row for row in reader if '4090' in row.get('name', '') and 'D' in row.get('name', '')]
    except:
        rtx4090d_db = []
    
    for i, gpu in enumerate(rtx4090d_db):
        print(f"\n{i+1}. {gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   manufacturer: {gpu.get('manufacturer', '–ù–µ—Ç')}")
        print(f"   architecture: {gpu.get('architecture', '–ù–µ—Ç')}")
        print(f"   generation: {gpu.get('generation', '–ù–µ—Ç')}")

if __name__ == "__main__":
    check_gpu_database_210() 