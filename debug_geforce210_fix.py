import json
import csv
import re

def extract_model_name(gpu_name):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã"""
    if not gpu_name:
        return None
    
    # –£–±–∏—Ä–∞–µ–º —Å–∫–æ–±–∫–∏ –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    name = re.sub(r'\([^)]*\)', '', gpu_name)
    
    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    name = name.lower()
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
    patterns = [
        r'geforce\s+(gtx?\s*)?(\d+[a-z]*\s*(?:super|ti)?)',
        r'radeon\s+(rx\s*)?(\d+[a-z]*\s*(?:xt)?)',
        r'rtx\s+(\d+[a-z]*\s*(?:super|ti)?)',
        r'gtx\s+(\d+[a-z]*\s*(?:super|ti)?)',
        r'gt\s+(\d+[a-z]*)',
        r'quadro\s+(\w+)',
        r'firepro\s+(\w+)',
        r'arc\s+(\w+)',
        r'(\d+[a-z]*\s*(?:super|ti|xt)?)'
    ]
    
    for pattern in patterns:
        match = re.search(pattern, name)
        if match:
            model = match.group(1) if len(match.groups()) == 1 else match.group(2)
            if model:
                return model.strip()
    
    return None

def find_matching_gpu_debug(gpu_name, gpu_database):
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è"""
    
    print(f"\nüîç –û–¢–õ–ê–î–ö–ê –¥–ª—è: {gpu_name}")
    print("=" * 80)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è
    model_name = extract_model_name(gpu_name)
    
    print(f"üìù –ò–∑–≤–ª–µ—á–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: '{model_name}'")
    
    if not model_name:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –º–æ–¥–µ–ª—å")
        return None
    
    # –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ clean_name –¥–ª—è GeForce 210
    if '210' in gpu_name.lower():
        print("\nüéØ –ü–æ–∏—Å–∫ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –¥–ª—è GeForce 210:")
        for gpu in gpu_database:
            db_name = gpu.get('name', '').lower()
            if 'geforce' in db_name and '210' in db_name:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: {gpu.get('name')}")
                return gpu
    
    # –ò—â–µ–º –ø–æ –º–æ–¥–µ–ª–∏
    print(f"\nüîç –ü–æ–∏—Å–∫ –ø–æ –º–æ–¥–µ–ª–∏ '{model_name}':")
    matches = []
    for gpu in gpu_database:
        db_name = gpu.get('name', '').lower()
        db_model = extract_model_name(gpu.get('name', ''))
        
        if model_name == db_model:
            print(f"   ‚úÖ –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏: {gpu.get('name')}")
            matches.append((gpu, 100, 'exact_model'))
        elif model_name and model_name in db_name:
            print(f"   ‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {gpu.get('name')}")
            matches.append((gpu, 80, 'partial_model'))
    
    if matches:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
        matches.sort(key=lambda x: x[1], reverse=True)
        best_match = matches[0]
        print(f"\nüèÜ –õ—É—á—à–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {best_match[0].get('name')} (–æ—Ü–µ–Ω–∫–∞: {best_match[1]})")
        return best_match[0]
    
    print("‚ùå –°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    return None

def main():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON –¥–∞–Ω–Ω—ã–µ
    try:
        with open('components.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ JSON: {e}")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö GPU
    try:
        with open('gpu-database.csv', 'r', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile)
            gpu_database = list(reader)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ CSV: {e}")
        return
    
    # –ù–∞—Ö–æ–¥–∏–º GeForce 210 –≤ JSON
    gpus = data.get('GPU', [])
    geforce210_entries = [g for g in gpus if '210' in g.get('name', '')]
    
    if not geforce210_entries:
        print("‚ùå GeForce 210 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ JSON")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å GeForce 210
    test_gpu = geforce210_entries[0]
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {test_gpu.get('name')}")
    
    # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    match = find_matching_gpu_debug(test_gpu.get('name'), gpu_database)
    
    if match:
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: {match.get('name')}")
    else:
        print("\n‚ùå –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

if __name__ == "__main__":
    main() 