import json

def main():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª
    print("üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º components.json...")
    try:
        with open('components.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª components.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É
    target_name = "(TUF 3-GTX1660S-O6G-GAMING)"
    
    print(f"üîç –ò—â–µ–º –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É: {target_name}")
    print("=" * 60)
    
    if 'GPU' not in data:
        print("‚ùå –í JSON —Ñ–∞–π–ª–µ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ GPU!")
        return
    
    gpus = data['GPU']
    found = False
    
    for i, gpu in enumerate(gpus):
        if gpu.get('name') == target_name:
            found = True
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {i+1}:")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {gpu.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   –ß–∏—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: {gpu.get('manufacturer', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {gpu.get('architecture', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
            print(f"   –ü–∞–º—è—Ç—å: {gpu.get('memory_size_gb', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')} GB")
            print(f"   –í—Å–µ–≥–æ –ø–æ–ª–µ–π: {len(gpu)}")
            print()
            print("üìã –í—Å–µ –ø–æ–ª—è:")
            for key, value in gpu.items():
                print(f"   {key}: {value}")
            break
    
    if not found:
        print(f"‚ùå –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ '{target_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ JSON —Ñ–∞–π–ª–µ")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Ö–æ–∂–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        print("\nüîç –ü–æ—Ö–æ–∂–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è:")
        for i, gpu in enumerate(gpus):
            name = gpu.get('name', '')
            if 'tuf' in name.lower() and '1660' in name.lower():
                print(f"   {i+1}. {name}")
                print(f"      clean_name: {gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"      manufacturer: {gpu.get('manufacturer', '–ù–µ —É–∫–∞–∑–∞–Ω')}")

if __name__ == "__main__":
    main() 