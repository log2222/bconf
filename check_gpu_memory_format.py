import json

def check_gpu_memory_format():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–ª—è memory_size_gb —É –≤–∏–¥–µ–æ–∫–∞—Ä—Ç"""
    
    print("=== –ü–†–û–í–ï–†–ö–ê –§–û–†–ú–ê–¢–ê MEMORY_SIZE_GB –£ –í–ò–î–ï–û–ö–ê–†–¢ ===\n")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª
        with open('components.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ü–∏–∏ GPU
        if 'GPU' not in data:
            print("‚ùå –í JSON —Ñ–∞–π–ª–µ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ GPU!")
            return
        
        gpus = data['GPU']
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(gpus)} –≤–∏–¥–µ–æ–∫–∞—Ä—Ç –≤ JSON —Ñ–∞–π–ª–µ\n")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç memory_size_gb
        memory_formats = {}
        gpus_with_memory = []
        
        for i, gpu in enumerate(gpus):
            memory_size = gpu.get('memory_size_gb')
            if memory_size is not None:
                gpus_with_memory.append((i+1, gpu))
                memory_type = type(memory_size).__name__
                if memory_type not in memory_formats:
                    memory_formats[memory_type] = []
                memory_formats[memory_type].append(memory_size)
        
        print(f"–í–∏–¥–µ–æ–∫–∞—Ä—Ç —Å –ø–æ–ª–µ–º memory_size_gb: {len(gpus_with_memory)}\n")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–∏–ø–∞–º –¥–∞–Ω–Ω—ã—Ö
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–∞–Ω–Ω—ã—Ö memory_size_gb:")
        for data_type, values in memory_formats.items():
            unique_values = list(set(values))
            print(f"  {data_type}: {len(values)} –∑–∞–ø–∏—Å–µ–π, —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: {unique_values[:10]}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –≤–∏–¥–µ–æ–∫–∞—Ä—Ç —Å memory_size_gb
        print(f"\nüìã –ü—Ä–∏–º–µ—Ä—ã –≤–∏–¥–µ–æ–∫–∞—Ä—Ç —Å memory_size_gb:")
        for i, (num, gpu) in enumerate(gpus_with_memory[:10]):
            name = gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            clean_name = gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            memory_size = gpu.get('memory_size_gb')
            memory_type = type(memory_size).__name__
            
            print(f"{i+1}. –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ #{num}:")
            print(f"   name: {name[:80]}...")
            print(f"   clean_name: {clean_name}")
            print(f"   memory_size_gb: {memory_size} (—Ç–∏–ø: {memory_type})")
            print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã GeForce GT 710
        print("üéØ –ü—Ä–∏–º–µ—Ä—ã GeForce GT 710:")
        gt710_examples = []
        for num, gpu in gpus_with_memory:
            if 'GT 710' in gpu.get('clean_name', ''):
                gt710_examples.append((num, gpu))
        
        for i, (num, gpu) in enumerate(gt710_examples[:5]):
            name = gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            clean_name = gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            memory_size = gpu.get('memory_size_gb')
            memory_type = type(memory_size).__name__
            
            print(f"{i+1}. –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ #{num}:")
            print(f"   name: {name[:80]}...")
            print(f"   clean_name: {clean_name}")
            print(f"   memory_size_gb: {memory_size} (—Ç–∏–ø: {memory_type})")
            print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_gpu_memory_format() 