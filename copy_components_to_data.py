#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è components.json –≤ –ø–∞–ø–∫—É data
"""

import shutil
import os
from datetime import datetime

def copy_components_to_data():
    """–ö–æ–ø–∏—Ä—É–µ—Ç components.json –≤ –ø–∞–ø–∫—É data"""
    
    source_file = "components.json"
    data_dir = "data"
    target_file = os.path.join(data_dir, "components.json")
    
    print(f"üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ {source_file} –≤ –ø–∞–ø–∫—É {data_dir}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists(source_file):
        print(f"‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª {source_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not os.path.exists(data_dir):
        print(f"üìÅ –°–æ–∑–¥–∞—é –ø–∞–ø–∫—É {data_dir}...")
        os.makedirs(data_dir)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é, –µ—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists(target_file):
        backup_name = f"components_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        backup_path = os.path.join(data_dir, backup_name)
        print(f"üíæ –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: {backup_name}")
        shutil.copy2(target_file, backup_path)
    
    try:
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
        shutil.copy2(source_file, target_file)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
        source_size = os.path.getsize(source_file)
        target_size = os.path.getsize(target_file)
        
        print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")
        print(f"üìä –†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {source_size:,} –±–∞–π—Ç")
        print(f"üìä –†–∞–∑–º–µ—Ä —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {target_size:,} –±–∞–π—Ç")
        
        if source_size == target_size:
            print(f"‚úÖ –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤ —Å–æ–≤–ø–∞–¥–∞—é—Ç - –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"‚ö†Ô∏è  –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–∞–∫ JSON
        try:
            import json
            with open(target_file, 'r', encoding='utf-8') as f:
                data = json.load(f)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º json.load –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ JSON —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
            sections = list(data.keys())
            print(f"üìã –ù–∞–π–¥–µ–Ω—ã —Å–µ–∫—Ü–∏–∏: {', '.join(sections)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–π —Å–µ–∫—Ü–∏–∏
            for section in sections:
                if isinstance(data[section], list):
                    count = len(data[section])
                    print(f"  üìä {section}: {count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
        except Exception as e:
            print(f"‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É JSON: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = copy_components_to_data()
    if success:
        print(f"\nüéâ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"\n‚ùå –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!") 