import json

def add_name_gb_to_all():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ name_gb –∫–æ –≤—Å–µ–º –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å memory_size_gb"""
    
    print("=== –î–û–ë–ê–í–õ–ï–ù–ò–ï –ü–û–õ–Ø NAME_GB –ö–û –í–°–ï–ú –í–ò–î–ï–û–ö–ê–†–¢–ê–ú ===\n")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª
        with open('components.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ü–∏–∏ GPU
        if 'GPU' not in data:
            print("‚ùå –í JSON —Ñ–∞–π–ª–µ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ GPU!")
            return False
        
        gpus = data['GPU']
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(gpus)} –≤–∏–¥–µ–æ–∫–∞—Ä—Ç –≤ JSON —Ñ–∞–π–ª–µ\n")
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        added_count = 0
        already_exists_count = 0
        no_memory_count = 0
        examples = []
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É
        for i, gpu in enumerate(gpus):
            memory_size_gb = gpu.get('memory_size_gb')
            name_gb = gpu.get('name_gb')
            
            if memory_size_gb is not None:
                if name_gb is None:
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ name_gb
                    if isinstance(memory_size_gb, (int, float)):
                        numeric_value = int(memory_size_gb) if isinstance(memory_size_gb, float) else memory_size_gb
                        gpus[i]['name_gb'] = f"{numeric_value}Gb"
                        added_count += 1
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
                        if len(examples) < 5:
                            examples.append({
                                'name': gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
                                'clean_name': gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
                                'memory_size_gb': memory_size_gb,
                                'name_gb': f"{numeric_value}Gb"
                            })
                    else:
                        no_memory_count += 1
                else:
                    already_exists_count += 1
            else:
                no_memory_count += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON
        print("–°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON —Ñ–∞–π–ª...")
        with open('components.json', 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        print("‚úÖ JSON —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω\n")
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è name_gb:")
        print(f"  –í—Å–µ–≥–æ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç: {len(gpus)}")
        print(f"  –î–æ–±–∞–≤–ª–µ–Ω–æ name_gb: {added_count}")
        print(f"  –£–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: {already_exists_count}")
        print(f"  –ë–µ–∑ memory_size_gb: {no_memory_count}")
        print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: {((added_count + already_exists_count)/len(gpus)*100):.1f}%\n")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        print("üìã –ü—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è name_gb:")
        for i, example in enumerate(examples, 1):
            print(f"{i}. {example['clean_name']}:")
            print(f"   name: {example['name'][:60]}...")
            print(f"   memory_size_gb: {example['memory_size_gb']}")
            print(f"   name_gb: {example['name_gb']}")
            print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã GeForce GT 710
        print("üéØ –ü—Ä–∏–º–µ—Ä—ã GeForce GT 710:")
        gt710_examples = []
        for i, gpu in enumerate(gpus):
            if 'GT 710' in gpu.get('clean_name', ''):
                gt710_examples.append((i+1, gpu))
        
        for i, (num, gpu) in enumerate(gt710_examples[:5]):
            name = gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            clean_name = gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            memory_size_gb = gpu.get('memory_size_gb')
            name_gb = gpu.get('name_gb')
            
            print(f"{i+1}. –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ #{num}:")
            print(f"   name: {name[:60]}...")
            print(f"   clean_name: {clean_name}")
            print(f"   memory_size_gb: {memory_size_gb}")
            print(f"   name_gb: {name_gb}")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    add_name_gb_to_all() 