import json

def check_geforce210():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–∏—Å–∏ GeForce 210 –∏ –∏—Ö –æ–±–æ–≥–∞—â–µ–Ω–∏–µ"""
    
    try:
        with open('components.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª components.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ JSON —Ñ–∞–π–ª–∞: {e}")
        return
    
    gpus = data.get('GPU', [])
    geforce210_entries = [g for g in gpus if '210' in g.get('name', '')]
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(geforce210_entries)} –∑–∞–ø–∏—Å–µ–π GeForce 210:")
    print("=" * 80)
    
    for i, gpu in enumerate(geforce210_entries):
        print(f"\n{i+1}. {gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   clean_name: {gpu.get('clean_name', '–ù–µ—Ç')}")
        print(f"   name_gb: {gpu.get('name_gb', '–ù–µ—Ç')}")
        print(f"   memory_size_gb: {gpu.get('memory_size_gb', '–ù–µ—Ç')}")
        print(f"   manufacturer: {gpu.get('manufacturer', '–ù–µ—Ç')}")
        print(f"   architecture: {gpu.get('architecture', '–ù–µ—Ç')}")
        print(f"   generation: {gpu.get('generation', '–ù–µ—Ç')}")
        print(f"   memory_type: {gpu.get('memory_type', '–ù–µ—Ç')}")
        print(f"   shading_units: {gpu.get('shading_units', '–ù–µ—Ç')}")
        print(f"   tensor_cores: {gpu.get('tensor_cores', '–ù–µ—Ç')}")
        print(f"   ray_tracing_cores: {gpu.get('ray_tracing_cores', '–ù–µ—Ç')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ–±–æ–≥–∞—â–µ–Ω–∞
        if gpu.get('clean_name') == 'GeForce RTX 4090 D':
            print("   ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ï –û–ë–û–ì–ê–©–ï–ù–ò–ï!")
        elif gpu.get('clean_name') == 'GeForce 210':
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ")
        else:
            print("   ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ")

if __name__ == "__main__":
    check_geforce210() 