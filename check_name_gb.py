import json

def main():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª
    print("üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º components.json...")
    try:
        with open('components.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª components.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç –≤ JSON
    if 'GPU' not in data:
        print("‚ùå –í JSON —Ñ–∞–π–ª–µ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ GPU!")
        return
    
    gpus = data['GPU']
    print(f"üìä –í—Å–µ–≥–æ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç –≤ JSON: {len(gpus)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è name_gb
    gpus_with_name_gb = 0
    gpus_without_name_gb = []
    
    for i, gpu in enumerate(gpus):
        if 'name_gb' in gpu and gpu['name_gb'] is not None:
            gpus_with_name_gb += 1
        else:
            gpus_without_name_gb.append((i+1, gpu.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')))
    
    print(f"\nüìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—è name_gb:")
    print(f"   –í–∏–¥–µ–æ–∫–∞—Ä—Ç —Å –ø–æ–ª–µ–º name_gb: {gpus_with_name_gb}")
    print(f"   –í–∏–¥–µ–æ–∫–∞—Ä—Ç –±–µ–∑ –ø–æ–ª—è name_gb: {len(gpus_without_name_gb)}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: {(gpus_with_name_gb / len(gpus) * 100):.1f}%")
    
    if gpus_without_name_gb:
        print(f"\n‚ùå –í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã –±–µ–∑ –ø–æ–ª—è name_gb:")
        for i, (index, name) in enumerate(gpus_without_name_gb[:10]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"   {index}. {name}")
        if len(gpus_without_name_gb) > 10:
            print(f"   ... –∏ –µ—â–µ {len(gpus_without_name_gb) - 10} –≤–∏–¥–µ–æ–∫–∞—Ä—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø—Ä–æ–±–ª–µ–º–Ω—É—é –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É:")
    target_name = "(TUF 3-GTX1660S-O6G-GAMING)"
    
    for i, gpu in enumerate(gpus):
        if gpu.get('name') == target_name:
            print(f"   –ù–∞–π–¥–µ–Ω–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {i+1}:")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {gpu.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   clean_name: {gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   name_gb: {gpu.get('name_gb', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   memory_size_gb: {gpu.get('memory_size_gb', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            print(f"   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: {gpu.get('manufacturer', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {gpu.get('architecture', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
            break
    else:
        print(f"   ‚ùå –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ '{target_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

if __name__ == "__main__":
    main() 