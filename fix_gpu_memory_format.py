import json

def fix_gpu_memory_format():
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø–æ–ª–µ memory_size_gb –∏–∑ —á–∏—Å–ª–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º Gb"""
    
    print("=== –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–ï –§–û–†–ú–ê–¢–ê MEMORY_SIZE_GB –£ –í–ò–î–ï–û–ö–ê–†–¢ ===\n")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª
        with open('components.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ü–∏–∏ GPU
        if 'GPU' not in data:
            print("‚ùå –í JSON —Ñ–∞–π–ª–µ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ GPU!")
            return False
        
        gpus = data['GPU']
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(gpus)} –≤–∏–¥–µ–æ–∫–∞—Ä—Ç –≤ JSON —Ñ–∞–π–ª–µ\n")
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        converted_count = 0
        skipped_count = 0
        examples = []
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—É
        for i, gpu in enumerate(gpus):
            memory_size = gpu.get('memory_size_gb')
            
            if memory_size is not None:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                if isinstance(memory_size, (int, float)):
                    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å Gb
                    if isinstance(memory_size, float):
                        # –£–±–∏—Ä–∞–µ–º .0 –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ int
                        memory_size_int = int(memory_size)
                    else:
                        memory_size_int = memory_size
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    new_memory_size = f"{memory_size_int}Gb"
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ
                    gpus[i]['memory_size_gb'] = new_memory_size
                    converted_count += 1
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
                    if len(examples) < 5:
                        examples.append({
                            'name': gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
                            'clean_name': gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
                            'old_value': memory_size,
                            'new_value': new_memory_size
                        })
                else:
                    skipped_count += 1
            else:
                skipped_count += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON
        print("–°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON —Ñ–∞–π–ª...")
        with open('components.json', 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        print("‚úÖ JSON —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω\n")
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:")
        print(f"  –í—Å–µ–≥–æ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç: {len(gpus)}")
        print(f"  –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ: {converted_count}")
        print(f"  –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count}")
        print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: {(converted_count/len(gpus)*100):.1f}%\n")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π
        print("üìã –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π:")
        for i, example in enumerate(examples, 1):
            print(f"{i}. {example['clean_name']}:")
            print(f"   name: {example['name'][:80]}...")
            print(f"   memory_size_gb: {example['old_value']} ‚Üí {example['new_value']}")
            print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã GeForce GT 710
        print("üéØ –ü—Ä–∏–º–µ—Ä—ã GeForce GT 710 –ø–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:")
        gt710_examples = []
        for i, gpu in enumerate(gpus):
            if 'GT 710' in gpu.get('clean_name', ''):
                gt710_examples.append((i+1, gpu))
        
        for i, (num, gpu) in enumerate(gt710_examples[:5]):
            name = gpu.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            clean_name = gpu.get('clean_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
            memory_size = gpu.get('memory_size_gb')
            
            print(f"{i+1}. –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ #{num}:")
            print(f"   name: {name[:80]}...")
            print(f"   clean_name: {clean_name}")
            print(f"   memory_size_gb: {memory_size}")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    fix_gpu_memory_format() 